/**
 * 项目  dzah-hibernate 
 * 创建时间  2015-7-3 下午5:03:58 
 * Copyright (c) 2015, wchhuangya All rights reserved.
 * wchhuangya 专有/保密源代码,未经许可禁止任何人通过任何* 渠道使用、修改源代码.
 */

package com.ch.wchhuangya.dzah.hibernate;

import java.util.Date;
import java.util.List;

import org.hibernate.Session;

import com.ch.wchhuangya.dzah.hibernate.domain.Event;
import com.ch.wchhuangya.dzah.hibernate.domain.Person;
import com.ch.wchhuangya.dzah.hibernate.util.HibernateUtil;


/**
 * 类名: EventManager <br/> 
 * 功能: 运行的主类 <br/> 
 * 创建日期: 2015-7-3 下午5:03:58 <br/> 
 *
 * @author wchya
 * @since Jdk 1.6
 * @see       
 *
 */
@SuppressWarnings("rawtypes")
public class EventManager {

	public static void main(String[] args) {
		EventManager mgr = new EventManager();
		
		if(args[0].equals("store")){
			mgr.createAndStoreEvent("中文事件", new Date());
		} else if (args[0].equals("list")) {
            List events = mgr.listEvents();
            for (int i = 0; i < events.size(); i++) {
                Event theEvent = (Event) events.get(i);
                System.out.println(
                        "Event: " + theEvent.getTitle() + " Time: " + theEvent.getDate()
                );
            }
        }
		
		HibernateUtil.getSessionFactory().close();
	}
	
    private void createAndStoreEvent(String title, Date theDate) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();

        Event theEvent = new Event();
        theEvent.setTitle(title);
        theEvent.setDate(theDate);
        session.save(theEvent);

        session.getTransaction().commit();
    }
    
	private List listEvents() {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List result = session.createQuery("from Event").list();
        session.getTransaction().commit();
        return result;
    }
	
	private void addPersonToEvent(Long personId, Long eventId) {
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		session.beginTransaction();
		
		Person aPerson = (Person) session.load(Person.class, personId);
		
		session.getTransaction().commit();
	}
}
