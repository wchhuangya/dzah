/**
 * 项目  dzah-biz 
 * 创建时间  2015-7-1 上午11:40:05 
 * Copyright (c) 2015, wchhuangya All rights reserved.
 * wchhuangya 专有/保密源代码,未经许可禁止任何人通过任何* 渠道使用、修改源代码.
 */

package com.ch.wchhuangya.dzah.biz.common;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.jolbox.bonecp.BoneCPDataSource;

/**
 * 类名: BoneCPConfig <br/>
 * 功能: <br/>
 * 创建日期: 2015-7-1 上午11:40:05 <br/>
 * 
 * @author wchya
 * @since Jdk 1.6
 * @see
 * 
 */
@Configuration
public class BoneCPConfig {

	@Value("${bonecp.url}")
	private String jdbcUrl;

	@Value("${bonecp.username}")
	private String jdbcUsername;

	@Value("${bonecp.password}")
	private String jdbcPassword;

	@Value("${bonecp.driverClass}")
	private String driverClass;

	@Value("${bonecp.idleMaxAgeInMinutes}")
	private Integer idleMaxAgeInMinutes;

	@Value("${bonecp.idleConnectionTestPeriodInMinutes}")
	private Integer idleConnectionTestPeriodInMinutes;

	@Value("${bonecp.maxConnectionsPerPartition}")
	private Integer maxConnectionsPerPartition;

	@Value("${bonecp.minConnectionsPerPartition}")
	private Integer minConnectionsPerPartition;

	@Value("${bonecp.partitionCount}")
	private Integer partitionCount;

	@Value("${bonecp.acquireIncrement}")
	private Integer acquireIncrement;

	@Value("${bonecp.statementsCacheSize}")
	private Integer statementsCacheSize;

	@Bean(destroyMethod = "close")
	public DataSource dataSource() {

		BoneCPDataSource dataSource = new BoneCPDataSource();

		dataSource.setDriverClass(driverClass);

		dataSource.setJdbcUrl(jdbcUrl);

		dataSource.setUsername(jdbcUsername);

		dataSource.setPassword(jdbcPassword);

		dataSource.setIdleConnectionTestPeriodInMinutes(idleConnectionTestPeriodInMinutes);

		dataSource.setIdleMaxAgeInMinutes(idleMaxAgeInMinutes);

		dataSource.setMaxConnectionsPerPartition(maxConnectionsPerPartition);

		dataSource.setMinConnectionsPerPartition(minConnectionsPerPartition);

		dataSource.setPartitionCount(partitionCount);

		dataSource.setAcquireIncrement(acquireIncrement);

		dataSource.setStatementsCacheSize(statementsCacheSize);

		return dataSource;
	}
}
